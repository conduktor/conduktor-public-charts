# Default values for conduktor-gateway

## @section Global parameters
## @descriptionStart
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
## @descriptionEnd
global:
  ## @param global.imagePullSecrets [array, nullable] Docker login secrets name for image pull
  imagePullSecrets: []
  ## @param global.env The environment name
  env: ""

## @section Common parameters
##

## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

gateway:
  ## @section Gateway image configuration
  ## @descriptionStart
  ## This section defines the image to be used.
  ## @descriptionEnd
  image:
    ## @param gateway.image.registry Docker registry to use
    registry: docker.io
    ## @param gateway.image.repository Image in repository format (conduktor/conduktor-gateway)
    repository: conduktor/conduktor-gateway
    ## @param gateway.image.tag Image tag
    tag: 3.9.0
    ## @param gateway.image.pullPolicy Kubernetes image pull policy
    pullPolicy: IfNotPresent

  ## @section Gateway configurations
  ## @descriptionStart
  ## This section contains configuration of the Conduktor Gateway.
  ## @descriptionEnd

  ## @param gateway.replicas number of gateway instances to be deployed
  replicas: 2
  ## @param gateway.secretRef Secret name to load sensitive env var from
  secretRef: ""
  ## @param gateway.extraSecretEnvVars Array with extra secret environment variables
  ## e.g:
  ## extraSecretEnvVars:
  ##  - name: SECRET_1
  ##    valueFrom:
  ##      secretKeyRef:
  ##        name: secret-test
  ##        key: SECRET_1
  ##  - name: SECRET_2
  ##    valueFrom:
  ##      secretKeyRef:
  ##        name: secret-test
  ##        key: SECRET_2
  extraSecretEnvVars: []
  ## @param gateway.secretSha256sum [nullable] Optional sha256sum of the referenced secret. This could be set to have a automactic restart of gateway deployment if secret change
  secretSha256sum: ""

  ## @param gateway.env [object] Environment variables for Gateway deployment in the form of a map of string key/value pairs
  env: {}

  ## @param gateway.licenseKey License key to activate Conduktor Gateway not used if `gateway.secretRef` is set
  licenseKey: ""

  userPool:
    ## @param gateway.userPool.secretKey Secret key (256bits) encoded in base64 to sign service accounts credentials when `SASL_PLAIN` or `SASL_SSL` is used for `GATEWAY_SECURITY_PROTOCOL`. If empty, a random key will be generated. Not used if `gateway.secretRef` is set.
    secretKey: ""

  ## @param gateway.interceptors Json configuration for interceptors to be loaded at startup by Gateway
  interceptors: "[]"

  portRange:
    ## @param gateway.portRange.start Start port of the gateway port range
    start: 9092
    ## @param gateway.portRange.count Max number of broker to expose
    count: 7

  admin:
    ## @param gateway.admin.port Admin HTTP server port
    port: 8888
    ## @param gateway.admin.users[0].username API Admin username. (not used if `gateway.secretRef` is set)
    ## @param gateway.admin.users[0].password API Admin password. If empty, a random password will be generated (not used if `gateway.secretRef` is set)
    ## @param gateway.admin.users[0].admin API user admin role flag. (not used if `gateway.secretRef` is set)
    users:
      - username: "admin"
        password: ""
        admin: true

    ## @param gateway.admin.mainAdminSecretKeys.username Secret key used to store the username of the main admin user from `gateway.admin.users` (first with admin role)
    ## @param gateway.admin.mainAdminSecretKeys.password Secret key used to store the password of the main admin user from `gateway.admin.users` (first with admin role)
    mainAdminSecretKeys:
      username: "GATEWAY_ADMIN_USERNAME"
      password: "GATEWAY_ADMIN_PASSWORD"

    ## @param gateway.admin.securedMetrics Enable secured metrics using api users credentials. If `gateway.secretRef` is set, this can't be used by `metrics.prometheus` to automatically configure basic auth on scrapping.
    securedMetrics: true

  jmx:
    ## @param gateway.jmx.enable Enable JMX JVM options
    enable: false
    ## @param gateway.jmx.port JMX port to expose by default JVM args
    port: 9999
    ## @param gateway.jmx.jvmArgs Arguments to pass to the gateway container JVM
    jvmArgs: -Dcom.sun.management.jmxremote.port={{ .Values.gateway.jmx.port }} -Dcom.sun.management.jmxremote.rmi.port={{ .Values.gateway.jmx.port }} -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1

  # Conduktor Gateway resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ## Gateway system requirements: https://docs.conduktor.io/gateway/get-started/system-requirements/
  ##
  resources:
    limits:
      ## @param gateway.resources.limits.cpu CPU limit for the platform container
      cpu: 2000m
      ## @param gateway.resources.limits.memory Memory limit for the container
      memory: 4Gi
    requests:
      ## @param gateway.resources.requests.cpu CPU resource requests
      cpu: 500m
      ## @param gateway.resources.requests.memory Memory resource requests
      memory: 500Mi

  ## @param gateway.startupProbeDelay [nullable] Optional delay in second before startup probe should be running (default 10)
  startupProbeDelay: ""

  ## @param gateway.podLabels Specific labels to be added to Gateway pod by deployment
  podLabels: {}

  ## @param gateway.podAnnotations Gateway pod annotations
  podAnnotations: {}

  ## @param gateway.securityContext Conduktor Gateway container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  ## @param gateway.volumes Define user specific volumes for Gateway deployment
  volumes: {}

  ## @param gateway.volumeMounts Define user specific volumeMounts for Gateway container in deployment
  volumeMounts: {}

  ## @param gateway.priorityClassName Define Gateway pods' priority based on an existing ClassName
  priorityClassName: ""

## @section TLS configuration
## @descriptionStart
## This section is for configuring Gateway to handle certificate to manage TLS endpoint inside Gateway deployment.
## @descriptionEnd
tls:
  ## @param tls.enable Enable TLS injection into Gateway
  enable: false
  ## @param tls.secretRef Secret name with keystore to load
  secretRef: ""
  ## @param tls.keystoreKey Key in the secret to load as keystore
  keystoreKey: keystore.jks
  ## @param tls.keystoreFile File name to mount keystore as
  keystoreFile: keystore.jks

## @section Gateway service configurations
## @descriptionStart
## This section contains Kubernetes services configuration.
## @descriptionEnd
service:
  ## @section Gateway external service configurations
  ## @descriptionStart
  ## This section specifies external service configuration
  ## @descriptionEnd
  external:
    ## @param service.external.enable Enable a service for external connection to Gateway
    enable: false
    ## @param service.external.type Type of load balancer
    type: ClusterIP
    ## @param service.external.ip IP to configure
    ip: ""
    ## @param service.external.annotations
    annotations: {}
    ## @param service.external.labels Labels to be added to Gateway internal service
    labels: {}
    # LoadBalancer externaldns gke support by annotation https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/gke.md#verify-using-an-external-load-balancer
    # external-dns.alpha.kubernetes.io/hostname: "{{ required "A valid .Values.gateway.domain is required!" .Values.gateway.domain }}"
    ## @param service.external.admin Enable admin exposition on external service
    admin: false
    ## @param service.external.jmx Enable jmx exposition on external service
    jmx: false
  ## @section Conduktor-gateway internal service configurations
  ## @descriptionStart
  ## This section specify internal service configuration
  ## @descriptionEnd
  internal:
    ## @param service.internal.annotations
    annotations: {}
    ## @param service.internal.labels Labels to be added to Gateway internal service
    labels: {}

## @section Gateway ingress configurations
## @descriptionStart
## This section contains Kubernetes ingress configuration.
## @descriptionEnd
ingress:
  ## @param ingress.enabled Enable ingress for Gateway
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  hostname: gateway.local
  ## @param ingress.ingressClassName IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: gateway.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - gateway.local
  ##   secretName: gateway.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## e.g:
  ## secrets:
  ##   - name: gateway.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []

## @section Gateway metrics activation
## @descriptionStart
## Gateway embed metrics to be installed within you cluster if your have the correct capabilities (Prometheus and Grafana operators).
## @descriptionEnd
metrics:
  alerts:
    ## @param metrics.alerts.enable Enable Prometheus alerts if Prometheus alerts rules are supported on cluster
    enable: false
  prometheus:
    ## @param metrics.prometheus.enable Enable ServiceMonitor Prometheus operator configuration for metrics scrapping
    enable: false
    ## @param metrics.prometheus.annotations Additional custom annotations for the ServiceMonitor
    ##
    annotations: {}
    ## @param metrics.prometheus.labels Extra labels for the ServiceMonitor
    ##
    labels: {}
    ## @param metrics.prometheus.scheme Protocol scheme to use for scraping (http or https). By default, automatically resolved based on container TLS configuration.
    scheme: ""
    ## @param metrics.prometheus.tlsConfig TLS configuration for the ServiceMonitor. By default, configured to skip TLS validation.
    tlsConfig: {}
    ## @param metrics.prometheus.jobLabel The name of the label on the target service to use as the job name in Prometheus
    ##
    jobLabel: "app.kubernetes.io/instance"
    ## @param metrics.prometheus.metricRelabelings Configure metric relabeling in ServiceMonitor
    metricRelabelings: {}
    ## @param metrics.prometheus.relabelings Configure relabelings in ServiceMonitor
    relabelings: {}
    ## @param metrics.prometheus.extraParams Extra parameters in ServiceMonitor. See https://prometheus-operator.dev/docs/api-reference/api/#monitoring.coreos.com/v1.Endpoint
    extraParams: {}
      # basicAuth:
      #   password:
      #     name: conduktor-admin-user # secret name
      #     key: password
      #   username:
      #     name: conduktor-admin-user # secret name
      #     key: username
  grafana:
    ## @param metrics.grafana.enable Enable Grafana dashboards to installation. Dashboards can be installed as Sidecar ConfigMap or using Grafana operator CRDs (v4 or v5)
    enable: false
    ## @param metrics.grafana.namespace Namespace used to deploy Grafana dashboards by default use the same namespace as Conduktor Gateway
    ##
    namespace: ""
    ## @param metrics.grafana.matchLabels Label selector for Grafana instance (for grafana-operator v5 only)
    ##
    matchLabels: {}
    ## @param metrics.grafana.labels Additional custom labels for Grafana dashboard ConfigMap. Used by Sidecar ConfigMap loading https://github.com/grafana/helm-charts/tree/main/charts/grafana#sidecar-for-dashboards
    ##
    labels: {}
    #  grafana_dashboard: '1' #Default label of Grafana Sidecar (sidecar.dashboards.label)
    ## @param metrics.grafana.folder Grafana dashboard folder name
    ##
    folder: ""
    datasources:
      ## @param metrics.grafana.datasources.prometheus Prometheus datasource to use for metric dashboard
      prometheus: prometheus
      ## @param metrics.grafana.datasources.loki Loki datasource to use for log dashboard
      loki: loki


## @section Kubernetes common configuration
## @descriptionStart
## Shared Kubernetes configuration of the chart.
## @descriptionEnd

## ServiceAccount configuration for the Conduktor Gateway pods
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @param nodeSelector Container node selector
nodeSelector: {}

## @param tolerations Container tolerations
tolerations: []

## @param affinity Container affinity
affinity: {}

## @param podSecurityContext Conduktor Gateway Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
##
podSecurityContext: {}
    # runAsNonRoot: true

## @skip tests
tests:
  enabled: false
