{{- if .Values.tests.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-99"
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kafka
      app.kubernetes.io/instance: kafka
  serviceName: kafka-hl
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kafka
        app.kubernetes.io/instance: kafka
      name: kafka
    spec:
      containers:
        - name: kafka
          image: docker.io/bitnami/kafka:3.1.0-debian-11-r0
          imagePullPolicy: IfNotPresent
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: KAFKA_CFG_NODE_ID
              value: "0"
            - name: KAFKA_CFG_PROCESS_ROLES
              value: "broker,controller"
            - name: KAFKA_CFG_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka:9092"
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: "PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT"
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: "0@kafka:9093"
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: "PLAINTEXT"
            - name: KAFKA_CFG_DEFAULT_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
          ports:
            - name: kafka
              containerPort: 9092
              protocol: TCP
            - name: controller
              containerPort: 9093
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          volumeMounts:
            - name: kafka-data
              mountPath: /bitnami/kafka
      restartPolicy: Always
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 0
      volumes:
        - emptyDir:
            medium: Memory
          name: kafka-data
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-99"
  labels:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: kafka
spec:
  ports:
    - name: kafka
      port: 9092
      protocol: TCP
      targetPort: 9092
    - name: controller
      port: 9093
      protocol: TCP
      targetPort: 9093
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: kafka
    app.kubernetes.io/instance: kafka
  type: ClusterIP
{{- end }}
