apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "conduktor-gateway.fullname" . }}
  labels: {{ include "conduktor-gateway.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{ include "conduktor-gateway.podSelectorLabels" . | nindent 6 }}
  replicas: {{ .Values.gateway.replicas }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/self-secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.gateway.secretSha256sum }}
        checksum/secret: {{ .Values.gateway.secretSha256sum }}
        {{- end }}
        {{- with .Values.gateway.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels: {{ include "conduktor-gateway.labels" . | nindent 8 }}
      {{- if .Values.gateway.podLabels }}
      {{- toYaml .Values.gateway.podLabels | nindent 8 }}
      {{- end }}
    spec:
      containers:
        - name: gateway
          image: {{ .Values.gateway.image.registry }}/{{ .Values.gateway.image.repository }}:{{ .Values.gateway.image.tag }}
          imagePullPolicy: {{ .Values.gateway.image.pullPolicy }}
          env:
            # Static env var to be reconsidered if we offer env way to configure them
            - name: GATEWAY_INTERCEPTOR_CONFIG_LOCATION
              value: /etc/gateway/config/interceptors.json
            {{- if not (hasKey .Values.gateway.env "GATEWAY_ADVERTISED_HOST") }}
            - name: GATEWAY_ADVERTISED_HOST
              value: {{ include "conduktor-gateway.internalServiceName" . }}
            {{- end }}
            - name: GATEWAY_PORT_START
              value: {{ .Values.gateway.portRange.start | quote }}
            - name: GATEWAY_PORT_COUNT
              value: {{ .Values.gateway.portRange.count | quote }}
            - name: GATEWAY_HTTP_PORT
              value: {{ .Values.gateway.admin.port | quote }}
            {{- if .Values.gateway.jmx.enable }}
            - name: JAVA_TOOL_OPTIONS
              value: {{ tpl .Values.gateway.jmx.jvmArgs . | quote }}
            {{- end}}
            - name: GATEWAY_SECURED_METRICS
              value: {{ .Values.gateway.admin.securedMetrics | quote }}
            {{- if and .Values.gateway.userPool .Values.gateway.userPool.serviceAccountRequired }}
            - name: GATEWAY_USER_POOL_SERVICE_ACCOUNT_REQUIRED
              value: {{ .Values.gateway.userPool.serviceAccountRequired | quote }}
            {{- end }}
            {{- if and .Values.tls.enable .Values.tls.secretRef}}
            - name: GATEWAY_SSL_KEY_STORE_PATH
              value: /etc/gateway/tls/{{ .Values.tls.keystoreFile }}
            {{- end }}
            {{- if .Values.gateway.extraSecretEnvVars }}
            {{- toYaml .Values.gateway.extraSecretEnvVars | nindent 12 }}
            {{- end }}
            - name: DEPLOYED_BY
              value: HelmChart/{{ .Chart.Version }}
          envFrom:
            - configMapRef:
                name: {{ include "conduktor-gateway.fullname" . }}
            {{- if .Values.gateway.secretRef }}
            - secretRef:
                name: {{ .Values.gateway.secretRef }}
            {{- else }}
            - secretRef:
                name: {{ include "conduktor-gateway.secretName" . }}
            {{- end }}
          ports:
            {{- range untilStep (int .Values.gateway.portRange.start) (int (add .Values.gateway.portRange.start .Values.gateway.portRange.count)) 1 }}
            - containerPort: {{ . }}
              protocol: TCP
            {{- end }}
            - name: admin-http
              containerPort: {{ .Values.gateway.admin.port }}
              protocol: TCP
            {{- if .Values.gateway.jmx.enable }}
            - name: jmx
              containerPort: {{ .Values.gateway.jmx.port }}
              protocol: TCP
            {{- end }}
          volumeMounts:
            {{- with .Values.gateway.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if and .Values.tls.enable .Values.tls.secretRef }}
            - name: keystore
              mountPath: /etc/gateway/tls/
              readOnly: true
            {{- end }}
            - name: config
              mountPath: /etc/gateway/config
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.gateway.admin.port }}
              scheme: {{ .Values.tls.enable | ternary "HTTPS" "HTTP" }}
            periodSeconds: 5
          startupProbe:
            httpGet:
              path: /health
              port: {{ .Values.gateway.admin.port }}
              scheme: {{ .Values.tls.enable | ternary "HTTPS" "HTTP" }}
            initialDelaySeconds: {{ .Values.gateway.startupProbeDelay | default 10 }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- else }}
          resources: {{- toYaml .Values.gateway.resources | nindent 12 }}
          {{- end }}
          {{- with .Values.gateway.podSecurityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- with .Values.gateway.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.tls.enable }}
        - name: keystore
          secret:
            secretName: {{ required "A .tls.secretRef is required when .tls.enable is true" .Values.tls.secretRef }}
            items:
            - key: {{ .Values.tls.keystoreKey }}
              path: {{ .Values.tls.keystoreFile }}
        {{- end }}
        - name: config
          configMap:
            name: {{ include "conduktor-gateway.fullname" . }}
            items:
            - key: interceptors.json
              path: interceptors.json
      serviceAccountName: {{ template "conduktor-gateway.serviceAccountName" . }}
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.gateway.priorityClassName }}
      priorityClassName: {{ .Values.gateway.priorityClassName | quote }}
      {{- end }}
