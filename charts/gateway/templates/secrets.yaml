{{- if not .Values.gateway.secretRef -}}
{{- $secretName := include "conduktor-gateway.secretName" . -}}
{{- $newUsersJson := include "conduktor-gateway.patchApiUsers" . | fromJsonArray -}}
{{- $mainAdmin := (include "conduktor-gateway.mainAdmin" $newUsersJson) | fromJson -}}
{{- $licenseKeyInEnv := eq (include "conduktor-gateway.envExists" (dict "envkey" "GATEWAY_LICENSE_KEY" "context" $)) "true" -}}
{{- $userPoolSecretKeyInEnv := eq (include "conduktor-gateway.envExists" (dict "envkey" "GATEWAY_USER_POOL_SECRET_KEY" "context" $)) "true" -}}
{{- $adminUsersInEnv := eq (include "conduktor-gateway.envExists" (dict "envkey" "GATEWAY_ADMIN_API_USERS" "context" $)) "true" -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{ include "conduktor-gateway.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{- if and .Values.gateway.licenseKey (not $licenseKeyInEnv) }}
  GATEWAY_LICENSE_KEY: {{ .Values.gateway.licenseKey | b64enc }}
  {{- end }}

  {{- if and .Values.gateway.userPool (not $userPoolSecretKeyInEnv) }}
  {{- $userPoolSecretKey := default (randAlphaNum 256 | b64enc) .Values.gateway.userPool.secretKey }}
  GATEWAY_USER_POOL_SECRET_KEY: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "GATEWAY_USER_POOL_SECRET_KEY" "defaultValue" $userPoolSecretKey "context" $) }}
  {{- end }}

  {{- if and .Values.gateway.admin.users (not $adminUsersInEnv) }}
  GATEWAY_ADMIN_API_USERS: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "GATEWAY_ADMIN_API_USERS" "defaultValue" ($newUsersJson | toJson) "context" $) }}
  {{- /* Exploded view of admin users to be used as dependencies in other deployments */ -}}
  {{- if $mainAdmin }}
  {{ printf "%s: %s" .Values.gateway.admin.mainAdminSecretKeys.username ($mainAdmin.username | b64enc) }}
  {{- $mainAdminPassword := include "common.secrets.lookup" (dict "secret" $secretName "key" .Values.gateway.admin.mainAdminSecretKeys.password "defaultValue" $mainAdmin.password "context" $) }}
  {{ printf "%s: %s" .Values.gateway.admin.mainAdminSecretKeys.password $mainAdminPassword }}
  {{- end }}

  {{- range $i, $user := $newUsersJson }}
  {{ printf "GATEWAY_ADMIN_API_USER_%d_USERNAME: %s" $i ($user.username | b64enc) }}
  {{ printf "GATEWAY_ADMIN_API_USER_%d_ADMIN: %s" $i ($user.admin | quote | b64enc) }}

  {{- /* Lookup for previous password to avoid changing existing one */ -}}
  {{- $passwordVar := printf "GATEWAY_ADMIN_API_USER_%d_PASSWORD" $i -}}
  {{- $password := include "common.secrets.lookup" (dict "secret" $secretName "key" $passwordVar "defaultValue" $user.password "context" $) }}
  {{ printf "%s: %s" $passwordVar $password }}
  {{ end }}
  {{ end }}

{{- end }}
