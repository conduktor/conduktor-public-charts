{{- if not .Values.gateway.secretRef }}
{{- $secretName := include "conduktor-gateway.secretName" . }}
{{- $newUsersJson := include "conduktor-gateway.patchApiUsers" . | fromJsonArray -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName | quote }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{ include "conduktor-gateway.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
type: Opaque
data:
  {{- if .Values.gateway.licenseKey }}
  GATEWAY_LICENSE_KEY: {{ .Values.gateway.licenseKey | b64enc }}
  {{- end }}
  GATEWAY_ADMIN_API_USERS: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "GATEWAY_ADMIN_API_USERS" "defaultValue" ($newUsersJson | toJson) "context" $) }}

  {{- /* Exploded view of admin users to be used as dependencies in other deployments */ -}}
  {{- range $i, $user := $newUsersJson }}
  {{ printf "GATEWAY_ADMIN_API_USER_%d_USERNAME: %s" $i ($user.username | b64enc) }}
  {{ printf "GATEWAY_ADMIN_API_USER_%d_ADMIN: %s" $i ($user.admin | quote | b64enc) }}

  {{- /* Lookup for previous password to avoid changing existing one */ -}}
  {{- $passwordVar := printf "GATEWAY_ADMIN_API_USER_%d_PASSWORD" $i -}}
  {{- $password := include "common.secrets.lookup" (dict "secret" $secretName "key" $passwordVar "defaultValue" $user.password "context" $) }}
  {{ printf "%s: %s" $passwordVar $password }}
  {{ end }}

{{- end }}
