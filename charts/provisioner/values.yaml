## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
##
global:
  imageRegistry: ""
  ## e.g:
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  ## Security parameters
  ##
  security:
    ## @param global.security.allowInsecureImages Allows skipping image verification
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ##
    openshift:
      ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
      ##
      adaptSecurityContext: auto
    ## @param global.compatibility.omitEmptySeLinuxOptions If set to true, removes the seLinuxOptions from the securityContexts when it is set to an empty object
    ##
    omitEmptySeLinuxOptions: false

## @section Common parameters
## @descriptionStart
## Configuration provisioning job and other common parameters.
## @descriptionEnd
##

## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param clusterDomain Kubernetes cluster domain name
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

## @section conduktor-ctl Parameters
## @descriptionStart
## Configuration of the conduktor-ctl image used to run the Conduktor CLI commands.
## @descriptionEnd
##

## Conduktor conduktor-ctl image
## ref: https://hub.docker.com/r/conduktor/conduktor-ctl/tags/
## @param image.registry conduktor-ctl image registry
## @param image.repository conduktor-ctl image repository
## @param image.tag conduktor-ctl image tag (immutable tags are recommended)
## @param image.digest conduktor-ctl image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy conduktor-ctl image pull policy
## @param image.pullSecrets conduktor-ctl image pull secrets
## @param image.debug Enable conduktor-ctl image debug mode
##
image:
  registry: docker.io
  repository: conduktor/conduktor-ctl
  tag: "v0.6.2"
  digest: ""
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  debug: false

cronJob:
  ## @param cronJob.enabled Configure conduktor-provisioner job as a CronJob
  enabled: false
  ## @param cronJob.schedule Schedule for the CronJob, by default empty string (no schedule)
  schedule: ""
  ## @param cronJob.timezone Timezone for the CronJob, by default empty string (no timezone)
  timezone: ""
  ## @param cronJob.concurrencyPolicy Concurrency policy for the CronJob, by default "Replace"
  concurrencyPolicy: "Replace"
  ## @param cronJob.suspend Suspend the CronJob, by default false (not suspended)
  suspend: false
  ## @param cronJob.successfulJobsHistoryLimit Number of successful jobs to keep in history
  successfulJobsHistoryLimit: 3
  ## @param cronJob.failedJobsHistoryLimit Number of failed jobs to keep in history
  failedJobsHistoryLimit: 1

## @param cleanupAfterFinished.enabled Enable cleanup of Job after it's finished
## @param cleanupAfterFinished.seconds TTL to cleanup the Job after it's finished
cleanupAfterFinished:
  enabled: false
  seconds: 600

## @param restartPolicy Restart policy for conduktor-provisioner jobs
restartPolicy: "OnFailure"

## @param backoffLimit Number of retries before the job is considered failed
backoffLimit: 10

## @param podSecurityContext conduktor-provisioner Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
## default:
## securityContext:
##   readOnlyRootFilesystem: true
##   runAsNonRoot: true
##
podSecurityContext: {}
## @param podLabels Extra labels for conduktor-provisioner pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## @param podAnnotations Annotations for conduktor-provisioner pods
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}
## @param podAffinityPreset Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAffinityPreset: ""
## @param podAntiAffinityPreset Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
##
podAntiAffinityPreset: soft
## Node affinity preset
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
##
nodeAffinityPreset:
  ## @param nodeAffinityPreset.type Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ##
  type: ""
  ## @param nodeAffinityPreset.key Node label key to match. Ignored if `affinity` is set
  ##
  key: ""
  ## @param nodeAffinityPreset.values Node label values to match. Ignored if `affinity` is set
  ## E.g.
  ## values:
  ##   - e2e-az1
  ##   - e2e-az2
  ##
  values: []
## @param priorityClassName conduktor-provisioner pods' priorityClassName
##
priorityClassName: ""
## @param affinity Affinity for conduktor-provisioner pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
## NOTE: `podAffinityPreset`, `podAntiAffinityPreset`, and `nodeAffinityPreset` will be ignored when it's set
##
affinity: {}
## @param nodeSelector Node labels for conduktor-provisioner pods assignment
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}
## @param tolerations Tolerations for conduktor-provisioner pods assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []
## @param schedulerName Name of the k8s scheduler (other than default) for conduktor-provisioner pods
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
schedulerName: ""
## @param terminationGracePeriodSeconds Seconds conduktor-provisioner pods need to terminate gracefully
## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
##
terminationGracePeriodSeconds: ""
## @param topologySpreadConstraints Topology Spread Constraints for conduktor-provisioner pod assignment spread across your cluster among failure-domains
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
##
topologySpreadConstraints: []

## @param initContainers List of init containers to add to the conduktor-provisioner job pod
## e.g:
## initContainers:
##   - name: my-init-container
##     image: my-init-container-image:latest
##     command: ["/bin/sh", "-c"]
##     args: ["echo Hello World"]
##
initContainers: []

## @section Init wait-for script configuration
## @descriptionStart
## Configures the wait-for scripts and image used to wait for the services to be ready before running the provisioner jobs.
## @descriptionEnd
##
waitFor:
  ## Curl official image used to wait for the services to be ready before running the provisioner jobs
  ## @param waitFor.image.registry registry for wait-for curl image
  ## @param waitFor.image.repository wait-for curl image repository
  ## @param waitFor.image.tag wait-for curl image tag (immutable tags are recommended)
  ## @param waitFor.image.digest wait-for curl image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
  ## @param waitFor.image.pullPolicy wait-for image pull policy
  ## @param waitFor.image.pullSecrets wait-for image pull secrets
  image:
    registry: docker.io
    repository: curlimages/curl
    tag: "8.15.0"
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  ## @param waitFor.retries Number of retries to wait for the service to be ready
  retries: 10
  ## @param waitFor.retryInterval Interval in seconds between retries
  retryInterval: 5

## @section Conduktor Console provisioning configuration
## @descriptionStart
## Configuration of Conduktor Console provisioning container using Conduktor CLI.
## @descriptionEnd
##
console:
  ## @param console.enabled Enable Console provisioning
  enabled: false
  ## @param console.authMode Authentication mode on Console for Conduktor CLI, either "conduktor" or "external" if using API Gateway in front of Console.
  authMode: "conduktor"

  ## @param console.url URL of the Console
  url: ""
  ## @param console.username Username to authenticate on the Console
  username: ""
  ## @param console.password Password to authenticate on the Console
  password: ""
  ## @param console.apiToken API Token to authenticate on the Console
  apiToken: ""
  ## @param console.caCert CA certificate of Console
  caCert: ""
  ## @param console.insecure Skip TLS verification
  insecure: false
  ## @param console.debug Enable verbose debug mode
  debug: false
  ## @param console.manifests Manifests YAML to apply on the Console
  manifests: []
  ## @param console.manifestsConfigMap Manifests YAML to apply on the Console
  manifestsConfigMap: ""
  ## @param console.manifestsConfigMapKey Manifests YAML to apply on the Console
  manifestsConfigMapKey: "00-console-resources.yaml"
  ## @param console.extraManifestsConfigMapRef List of ConfigMaps references with extra manifests to apply on the Console
  ## e.g:
  ## extraManifestsConfigMapRef:
  ##  - name: my-custom-manifests
  ##    key: my-custom-manifests.yaml
  extraManifestsConfigMapRef: []

  ## @param console.command Override default conduktor-provisioner container command (useful when using custom images)
  ##
  command:
    - /bin/conduktor
  ## @param console.args Override default conduktor-provisioner container args (useful when using custom images)
  ##
  args:
    - apply
    - -f
    - /conf

  ## @param console.extraEnvVars Array with extra environment variables to add to conduktor-provisioner containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param console.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for conduktor-provisioner containers
  ##
  extraEnvVarsCM: ""
  ## @param console.extraEnvVarsSecret Name of existing Secret containing extra env vars for conduktor-provisioner containers
  ##
  extraEnvVarsSecret: ""
  ## @param console.extraVolumes Optionally specify extra list of additional volumes for the conduktor-provisioner pods
  ##
  extraVolumes: []
  ## @param console.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the conduktor-provisioner containers
  ##
  extraVolumeMounts: []

  resources:
    requests:
      ## @param console.resources.requests.cpu CPU resource requests
      cpu: 100m
      ## @param console.resources.requests.memory Memory resource requests
      memory: 50Mi
    limits:
      ## @param console.resources.limits.cpu CPU limit for the platform container
      cpu: 500m
      ## @param console.resources.limits.memory Memory limit for the container
      memory: 128Mi

  ## @param console.containerSecurityContext conduktor-provisioner containers' Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## default:
  ## securityContext:
  ##   readOnlyRootFilesystem: true
  ##   runAsNonRoot: true
  ##
  containerSecurityContext: {}


## @section Conduktor Gateway provisioning configuration
## @descriptionStart
## Configuration of Conduktor Gateway provisioning container using Conduktor CLI.
## @descriptionEnd
##
gateway:
  ## @param gateway.enabled Enable Gateway provisioning
  enabled: false
  ## @param gateway.url URL of the Gateway
  url: ""
  ## @param gateway.username Username to authenticate on the Gateway
  username: ""
  ## @param gateway.password Password to authenticate on the Gateway
  password: ""
  ## @param gateway.apiToken API Token to authenticate on the Gateway
  apiToken: ""
  ## @param gateway.caCert CA certificate of Gateway
  caCert: ""
  ## @param gateway.insecure Skip TLS verification
  insecure: false
  ## @param gateway.debug Enable verbose debug mode
  debug: false
  ## @param gateway.manifests Manifests YAML to apply on the Gateway
  manifests: []
  ## @param gateway.manifestsConfigMap Manifests YAML to apply on the Gateway
  manifestsConfigMap: ""
  ## @param gateway.manifestsConfigMapKey Manifests YAML to apply on the Gateway
  manifestsConfigMapKey: "00-gateway-resources.yaml"
  ## @param gateway.extraManifestsConfigMapRef List of ConfigMaps references with extra manifests to apply on the Gateway
  ## e.g:
  ## extraManifestsConfigMapRef:
  ##  - name: my-custom-manifests
  ##    key: my-custom-manifests.yaml
  extraManifestsConfigMapRef: []

  ## @param gateway.command Override default conduktor-provisioner container command
  ##
  command:
    - /bin/conduktor
  ## @param gateway.args Override default conduktor-provisioner container args
  ##
  args:
    - apply
    - -f
    - /conf

  ## @param gateway.extraEnvVars Array with extra environment variables to add to conduktor-provisioner containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param gateway.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for conduktor-provisioner containers
  ##
  extraEnvVarsCM: ""
  ## @param gateway.extraEnvVarsSecret Name of existing Secret containing extra env vars for conduktor-provisioner containers
  ##
  extraEnvVarsSecret: ""
  ## @param gateway.extraVolumes Optionally specify extra list of additional volumes for the conduktor-provisioner pods
  ##
  extraVolumes: []
  ## @param gateway.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the conduktor-provisioner containers
  ##
  extraVolumeMounts: []

  resources:
    requests:
      ## @param gateway.resources.requests.cpu CPU resource requests
      cpu: 100m
      ## @param gateway.resources.requests.memory Memory resource requests
      memory: 50Mi
    limits:
      ## @param gateway.resources.limits.cpu CPU limit for the platform container
      cpu: 500m
      ## @param gateway.resources.limits.memory Memory limit for the container
      memory: 128Mi

  ## @param gateway.containerSecurityContext conduktor-provisioner containers' Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## default:
  ## securityContext:
  ##   readOnlyRootFilesystem: true
  ##   runAsNonRoot: true
  ##
  containerSecurityContext: {}


## @section Other Parameters
## @descriptionStart
## Other parameters for the provisioner job.
## @descriptionEnd
##

## ServiceAccount configuration
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true


## @skip tests
tests:
  enabled: false
  console:
    enabled: false
  gateway:
    enabled: false
