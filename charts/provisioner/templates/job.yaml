{{- if or .Values.console.enabled .Values.gateway.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "provisioner.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: conduktor-provisioning
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: before-hook-creation
    {{- if .Values.commonAnnotations }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.cleanupAfterFinished.enabled }}
  ttlSecondsAfterFinished: {{ .Values.cleanupAfterFinished.seconds }}
  {{- end }}
  parallelism: 1
  template:
    metadata:
      labels: {{- include "provisioner.labels" . | nindent 8 }}
        app.kubernetes.io/component: conduktor-provisioning
      {{- if .Values.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "provisioner.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.schedulerName }}
      schedulerName: {{ .Values.schedulerName }}
      {{- end }}
      restartPolicy: OnFailure
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 0
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.podSecurityContext }}
      securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.podSecurityContext "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "provisioner.serviceAccountName" . }}
      initContainers: [] # TODO
      containers:
      {{- if .Values.console.enabled }}
        - name: conduktor-ctl-console
          image: {{ include "common.images.image" (dict "imageRoot" .Values.image "global" .Values.global) }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if .Values.console.containerSecurityContext }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" .Values.console.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else }}
          {{- if .Values.console.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.console.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.console.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.console.args "context" $) | nindent 12 }}
          {{- else }}
          args:
              - apply
              - -f
              - /conf/{{ .Values.console.manifestsConfigMapKey }}
          {{- end }}
          {{- end }}
          env:
            - name: CDK_DEBUG
              value: "true"
            - name: CDK_INSECURE
              value: {{ .Values.console.insecure | quote }}
            - name: CDK_AUTH_MODE
              value: {{ .Values.console.authMode | quote }}
            {{- if .Values.console.url}}
            - name: CDK_BASE_URL
              value: {{ .Values.console.url | quote }}
            {{- end }}
            {{- if .Values.console.caCert }}
            - name: CDK_CACERT
              value: {{ .Values.console.caCert | quote }}
            {{- end }}
            {{- if .Values.console.username }}
            - name: CDK_USER
              value: {{ .Values.console.username | quote }}
            {{- end }}
            {{- if .Values.console.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "provisioner.config.secrets" . }}
            {{- if .Values.console.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.console.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.console.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.console.resources }}
          resources: {{- toYaml .Values.console.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            - name: config
              mountPath: /conf
            {{- if .Values.console.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" .Values.console.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "provisioner.manifests.configMapName" . }}
        {{- if .Values.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}