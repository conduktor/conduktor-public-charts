{{- $isSSLEnabled := not (empty (include "conduktor.platform.tls.enabled" .)) -}}
{{- $proto := ternary "https" "http" (or .Values.ingress.tls $isSSLEnabled) -}}
CHART NAME: {{ .Chart.Name  }}
CHART VERSION: {{ .Chart.Version  }}
APP VERSION: {{ .Chart.AppVersion  }}

** Please be patient while the chart is being deployed **

{{- if .Values.diagnosticMode.enabled }}
The chart has been deployed in diagnostic mode. All probes have been disabled and the command has been overwritten with:

  command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 4 }}
  args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 4 }}

Get the list of pods by executing:

  kubectl get pods --namespace {{ include "common.names.namespace" . | quote }} -l app.kubernetes.io/instance={{ .Release.Name }}

Access the pod you want to debug by executing

  kubectl exec --namespace {{ include "common.names.namespace" . | quote }} -ti <NAME OF THE POD> -- bash

In order to replicate the container startup scripts execute this command:

    /opt/conduktor/scripts/run.sh

{{- end }}

{{ if .Values.ingress.enabled }}
Conduktor Console will be accessible at :  {{ printf "%s://%s" $proto .Values.ingress.hostname }}
{{- else }}
Forward Console service locally with the command (may take a few seconds to be ready):
kubectl port-forward -n {{ .Release.Namespace }} svc/{{ template "common.names.fullname" . }} 8080:80

Conduktor Console will be accessible at : {{ printf "%s://127.0.0.1:8080" $proto }}
{{- end }}

To connect use following admin account ADMIN_LOGIN and ADMIN_PASSWORD

ADMIN_LOGIN="{{ include "common.secrets.lookup" (dict "secret" (include "conduktor.platform.secretName" .) "key" "CDK_ADMIN_EMAIL" "defaultValue" .Values.config.admin.email "context" $) | b64dec }}"
ADMIN_PASSWORD="$(kubectl get secret {{ include "conduktor.platform.secretName" .  }} -n {{ .Release.Namespace }} -o jsonpath="{.data.CDK_ADMIN_PASSWORD}" | base64 --decode)"

More details on Console configuration are available at https://docs.conduktor.io/platform/
If you have any issue, please contact our support by browsing to https://www.conduktor.io/contact/support/

{{ if and (empty .Values.config.license) (empty .Values.config.existingLicenseSecret) }}
You are using the free version of Conduktor Console.
If you need more, please contact our sales team by browsing to https://www.conduktor.io/contact/sales/
{{- end }}

{{- if and .Values.platformCortex.enabled (eq (include "conduktor.monitoring.storageType" .) "filesystem") }}
You are using the filesystem storage type for Cortex. This is not recommended for production usage.
See https://docs.conduktor.io/platform/configuration/cortex/ for configuration details.
{{- end }}

{{- include "common.warnings.rollingTag" .Values.platform.image }}
{{- include "conduktor.validateValues" . }}

{{- if and .Values.platform.metrics.enabled .Values.platform.metrics.serviceMonitor.enabled }}
{{- if not (.Capabilities.APIVersions.Has "monitoring.coreos.com/v1/ServiceMonitor") }}
WARNING: Prometheus Operator is not installed in the cluster. ServiceMonitor will not be created.
{{- end }}
{{- if .Values.platform.metrics.grafana.enabled }}
{{- if not (or (.Capabilities.APIVersions.Has "grafana.integreatly.org/v1beta1/GrafanaDashboard") (.Capabilities.APIVersions.Has "integreatly.org/v1alpha1/GrafanaDashboard")) }}
WARNING: Grafana Operator in v4 ot v5 is not installed in the cluster. GrafanaDashboard will not be created.
{{- end }}
{{- end }}
{{- end }}
