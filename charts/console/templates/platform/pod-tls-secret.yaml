{{- if and .Values.config.platform.https.selfSigned (not .Values.config.platform.https.existingSecret) }}
{{- $secretName := include "conduktor.platform.tls.secretName" . | quote }}
{{- $externalUrl := required "When enabling self signed certificate you need to give a domain name with config.platform.external.url (e.g: conduktor.mycompany.org)" (.Values.config.platform.external).url }}
{{- $externalDomain := regexReplaceAllLiteral "(http|https)://" $externalUrl "" }}
{{- $internalDomain := include "conduktor.platform.serviceDomain" . }}
{{- $serviceIp := .Values.service.clusterIP -}}
{{- $ipList := ternary nil (list $serviceIp) (empty $serviceIp) -}}
{{- $ca := genCA "conduktor-platform-ca" 365 }}
{{- $cert := genSignedCert $externalDomain $ipList (list $externalDomain $internalDomain) 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: conduktor-platform
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
  ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
{{- end }}

